import numpy as np

from lrg_omics.metabolomics.common import find_linear_range

def test__find_linear_range():
        x = np.array([ 0.,  2.,  3.,  3.,  4.,  6.,  6.,  7.,  8.,  9., 10., 12., 13.,
       13., 14., 15., 17., 18., 18., 19., 20., 21., 22., 24., 24., 25.,
       26., 27., 29., 30., 30., 31., 32., 33., 35., 35., 36., 38., 39.,
       40., 40., 42., 43., 43., 44., 45., 46., 47., 48., 50.])
        
        y = np.array([ 0.,  1.14142136,  0.4       ,  0.73484692,  2.13137085,
        2.58113883,  2.07846097,  3.61916017,  4.2       ,  3.81837662,
        4.47213595,  5.15945734,  6.87877538,  6.62872537,  8.40810367,
        8.21583836,  9.0509668 ,  9.91261822, 10.8       , 12.71238661,
       13.64911064, 14.60955547, 15.59314908, 16.59935896, 17.62768775,
       17.67766953, 19.74886663, 19.84086692, 20.95328137, 22.08574201,
       24.23790008, 25.40942441, 25.6       , 27.80932674, 28.03711825,
       30.28310093, 31.54701295, 31.82860349, 33.12763197, 34.44386738,
       36.77708764, 37.12707907, 38.49363584, 40.87655953, 42.27565869,
       42.69074841, 45.12165001, 45.56819066, 48.03020306, 49.50752519])
        
        expected = [12.0, 35.0]
        y_intercept, x_c, y_c = find_linear_range(x, y, 0.75)
        actual = [min(x_c), max(x_c)]
        assert actual == expected, f'\nExpected:\n {expected}\nReceived:\n {actual}'